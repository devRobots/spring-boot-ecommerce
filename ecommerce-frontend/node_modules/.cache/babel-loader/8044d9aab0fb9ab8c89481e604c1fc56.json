{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/elements/Container/Container.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useTextAlignProp","Container","props","children","className","content","fluid","text","textAlign","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","bool","oneOf","TEXT_ALIGNMENTS"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,GAA5E,EAAiFC,UAAjF,EAA6FC,gBAA7F,QAAqH,WAArH;AACA;;;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;AAAA,MAIIC,IAAI,GAAGL,KAAK,CAACK,IAJjB;AAAA,MAKIC,SAAS,GAAGN,KAAK,CAACM,SALtB;AAMA,MAAIC,OAAO,GAAGlB,EAAE,CAAC,IAAD,EAAOQ,UAAU,CAACQ,IAAD,EAAO,MAAP,CAAjB,EAAiCR,UAAU,CAACO,KAAD,EAAQ,OAAR,CAA3C,EAA6DN,gBAAgB,CAACQ,SAAD,CAA7E,EAA0F,WAA1F,EAAuGJ,SAAvG,CAAhB;AACA,MAAIM,IAAI,GAAGb,iBAAiB,CAACI,SAAD,EAAYC,KAAZ,CAA5B;AACA,MAAIS,WAAW,GAAGf,cAAc,CAACK,SAAD,EAAYC,KAAZ,CAAhC;AACA,SAAOT,KAAK,CAACmB,aAAN,CAAoBD,WAApB,EAAiCrB,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;AACzDN,IAAAA,SAAS,EAAEK;AAD8C,GAAX,CAAzC,EAEHf,aAAa,CAACmB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAFvC,CAAP;AAGD;;AAEDF,SAAS,CAACa,YAAV,GAAyB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,OAA3C,EAAoD,MAApD,EAA4D,WAA5D,CAAzB;AACAb,SAAS,CAACc,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5D;AACAC,EAAAA,EAAE,EAAE3B,SAAS,CAAC4B,WAF8C;;AAI5D;AACAjB,EAAAA,QAAQ,EAAEX,SAAS,CAAC6B,IALwC;;AAO5D;AACAjB,EAAAA,SAAS,EAAEZ,SAAS,CAAC8B,MARuC;;AAU5D;AACAjB,EAAAA,OAAO,EAAEV,eAAe,CAAC4B,gBAXmC;;AAa5D;AACAjB,EAAAA,KAAK,EAAEd,SAAS,CAACgC,IAd2C;;AAgB5D;AACAjB,EAAAA,IAAI,EAAEf,SAAS,CAACgC,IAjB4C;;AAmB5D;AACAhB,EAAAA,SAAS,EAAEhB,SAAS,CAACiC,KAAV,CAAgB3B,GAAG,CAAC4B,eAApB;AApBiD,CAAxC,GAqBlB,EArBJ;AAsBA,eAAezB,SAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;"]},"metadata":{},"sourceType":"module"}