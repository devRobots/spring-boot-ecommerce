{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","Segment","TabPane","props","active","children","className","content","loading","classes","rest","ElementType","calculatedDefaultProps","attached","createElement","isNil","handledProps","defaultProps","as","propTypes","process","env","NODE_ENV","elementType","bool","node","string","contentShorthand","create"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,EAAoGC,UAApG,QAAsH,WAAtH;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA;;;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;AAKA,MAAIC,OAAO,GAAGjB,EAAE,CAACQ,UAAU,CAACI,MAAD,EAAS,QAAT,CAAX,EAA+BJ,UAAU,CAACQ,OAAD,EAAU,SAAV,CAAzC,EAA+D,KAA/D,EAAsEF,SAAtE,CAAhB;AACA,MAAII,IAAI,GAAGX,iBAAiB,CAACG,OAAD,EAAUC,KAAV,CAA5B;AACA,MAAIQ,WAAW,GAAGb,cAAc,CAACI,OAAD,EAAUC,KAAV,CAAhC;AACA,MAAIS,sBAAsB,GAAG,EAA7B;;AAEA,MAAID,WAAW,KAAKV,OAApB,EAA6B;AAC3BW,IAAAA,sBAAsB,CAACC,QAAvB,GAAkC,QAAlC;AACD;;AAED,SAAOnB,KAAK,CAACoB,aAAN,CAAoBH,WAApB,EAAiCpB,QAAQ,CAAC,EAAD,EAAKqB,sBAAL,EAA6BF,IAA7B,EAAmC;AACjFJ,IAAAA,SAAS,EAAEG;AADsE,GAAnC,CAAzC,EAEHd,aAAa,CAACoB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAFvC,CAAP;AAGD;;AAEDH,OAAO,CAACc,YAAR,GAAuB,CAAC,QAAD,EAAW,IAAX,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,SAA1C,EAAqD,SAArD,CAAvB;AACAd,OAAO,CAACe,YAAR,GAAuB;AACrBC,EAAAA,EAAE,EAAEjB,OADiB;AAErBG,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAIAF,OAAO,CAACiB,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC1D;AACAJ,EAAAA,EAAE,EAAEzB,SAAS,CAAC8B,WAF4C;;AAI1D;AACAnB,EAAAA,MAAM,EAAEX,SAAS,CAAC+B,IALwC;;AAO1D;AACAnB,EAAAA,QAAQ,EAAEZ,SAAS,CAACgC,IARsC;;AAU1D;AACAnB,EAAAA,SAAS,EAAEb,SAAS,CAACiC,MAXqC;;AAa1D;AACAnB,EAAAA,OAAO,EAAEV,eAAe,CAAC8B,gBAdiC;;AAgB1D;AACAnB,EAAAA,OAAO,EAAEf,SAAS,CAAC+B;AAjBuC,CAAxC,GAkBhB,EAlBJ;AAmBAtB,OAAO,CAAC0B,MAAR,GAAiBhC,sBAAsB,CAACM,OAAD,EAAU,UAAUK,OAAV,EAAmB;AAClE,SAAO;AACLA,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CAJsC,CAAvC;AAKA,eAAeL,OAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;"]},"metadata":{},"sourceType":"module"}