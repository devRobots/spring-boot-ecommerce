{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _round from \"lodash/round\";\nimport _clamp from \"lodash/clamp\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLDivision, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\n/**\n * A progress bar shows the progression of a task.\n */\n\nvar Progress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Progress, _Component);\n\n  function Progress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Progress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"calculatePercent\", function () {\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          total = _this$props.total,\n          value = _this$props.value;\n      if (!_isUndefined(percent)) return percent;\n      if (!_isUndefined(total) && !_isUndefined(value)) return value / total * 100;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeValueText\", function (percent) {\n      var _this$props2 = _this.props,\n          progress = _this$props2.progress,\n          total = _this$props2.total,\n          value = _this$props2.value;\n      if (progress === 'value') return value;\n      if (progress === 'ratio') return \"\".concat(value, \"/\").concat(total);\n      return \"\".concat(percent, \"%\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPercent\", function () {\n      var _this$props3 = _this.props,\n          precision = _this$props3.precision,\n          progress = _this$props3.progress,\n          total = _this$props3.total,\n          value = _this$props3.value;\n\n      var percent = _clamp(_this.calculatePercent(), 0, 100);\n\n      if (!_isUndefined(total) && !_isUndefined(value) && progress === 'value') {\n        return value / total * 100;\n      }\n\n      if (progress === 'value') return value;\n      if (_isUndefined(precision)) return percent;\n      return _round(percent, precision);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isAutoSuccess\", function () {\n      var _this$props4 = _this.props,\n          autoSuccess = _this$props4.autoSuccess,\n          percent = _this$props4.percent,\n          total = _this$props4.total,\n          value = _this$props4.value;\n      return autoSuccess && (percent >= 100 || value >= total);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLabel\", function () {\n      var _this$props5 = _this.props,\n          children = _this$props5.children,\n          content = _this$props5.content,\n          label = _this$props5.label;\n      if (!childrenUtils.isNil(children)) return React.createElement(\"div\", {\n        className: \"label\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return React.createElement(\"div\", {\n        className: \"label\"\n      }, content);\n      return createHTMLDivision(label, {\n        autoGenerateKey: false,\n        defaultProps: {\n          className: 'label'\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProgress\", function (percent) {\n      var _this$props6 = _this.props,\n          precision = _this$props6.precision,\n          progress = _this$props6.progress;\n      if (!progress && _isUndefined(precision)) return;\n      return React.createElement(\"div\", {\n        className: \"progress\"\n      }, _this.computeValueText(percent));\n    });\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          active = _this$props7.active,\n          attached = _this$props7.attached,\n          className = _this$props7.className,\n          color = _this$props7.color,\n          disabled = _this$props7.disabled,\n          error = _this$props7.error,\n          indicating = _this$props7.indicating,\n          inverted = _this$props7.inverted,\n          size = _this$props7.size,\n          success = _this$props7.success,\n          warning = _this$props7.warning;\n      var classes = cx('ui', color, size, useKeyOnly(active || indicating, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(indicating, 'indicating'), useKeyOnly(inverted, 'inverted'), useKeyOnly(success || this.isAutoSuccess(), 'success'), useKeyOnly(warning, 'warning'), useValueAndKey(attached, 'attached'), 'progress', className);\n      var rest = getUnhandledProps(Progress, this.props);\n      var ElementType = getElementType(Progress, this.props);\n      var percent = this.getPercent() || 0;\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"data-percent\": Math.floor(percent)\n      }), React.createElement(\"div\", {\n        className: \"bar\",\n        style: {\n          width: \"\".concat(percent, \"%\")\n        }\n      }, this.renderProgress(percent)), this.renderLabel());\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\n_defineProperty(Progress, \"handledProps\", [\"active\", \"as\", \"attached\", \"autoSuccess\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"error\", \"indicating\", \"inverted\", \"label\", \"percent\", \"precision\", \"progress\", \"size\", \"success\", \"total\", \"value\", \"warning\"]);\n\nProgress.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A progress bar can show activity. */\n  active: PropTypes.bool,\n\n  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n  attached: PropTypes.oneOf(['top', 'bottom']),\n\n  /** Whether success state should automatically trigger when progress completes. */\n  autoSuccess: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A progress bar can have different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A progress bar be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A progress bar can show a error state. */\n  error: PropTypes.bool,\n\n  /** An indicating progress bar visually indicates the current level of progress of a task. */\n  indicating: PropTypes.bool,\n\n  /** A progress bar can have its colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Can be set to either to display progress as percent or ratio. */\n  label: customPropTypes.itemShorthand,\n\n  /** Current percent complete. */\n  percent: customPropTypes.every([customPropTypes.disallow(['total', 'value']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** Decimal point precision for calculated progress. */\n  precision: PropTypes.number,\n\n  /** A progress bar can contain a text value indicating current progress. */\n  progress: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['percent', 'ratio', 'value'])]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'huge', 'massive')),\n\n  /** A progress bar can show a success state. */\n  success: PropTypes.bool,\n\n  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */\n  total: customPropTypes.every([customPropTypes.demand(['value']), customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */\n  value: customPropTypes.every([customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** A progress bar can show a warning state. */\n  warning: PropTypes.bool\n} : {};\nexport default Progress;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/modules/Progress/Progress.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_round","_clamp","_isUndefined","_without","cx","PropTypes","React","Component","childrenUtils","createHTMLDivision","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useValueAndKey","Progress","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","props","percent","total","value","_this$props2","progress","_this$props3","precision","calculatePercent","_this$props4","autoSuccess","_this$props5","children","content","label","isNil","createElement","className","autoGenerateKey","defaultProps","_this$props6","computeValueText","key","render","_this$props7","active","attached","color","disabled","error","indicating","inverted","size","success","warning","classes","isAutoSuccess","rest","ElementType","getPercent","Math","floor","style","width","renderProgress","renderLabel","propTypes","process","env","NODE_ENV","as","elementType","bool","oneOf","node","string","COLORS","contentShorthand","itemShorthand","every","disallow","oneOfType","number","SIZES","demand"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _round from \"lodash/round\";\nimport _clamp from \"lodash/clamp\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLDivision, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\n/**\n * A progress bar shows the progression of a task.\n */\n\nvar Progress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Progress, _Component);\n\n  function Progress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Progress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"calculatePercent\", function () {\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          total = _this$props.total,\n          value = _this$props.value;\n      if (!_isUndefined(percent)) return percent;\n      if (!_isUndefined(total) && !_isUndefined(value)) return value / total * 100;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeValueText\", function (percent) {\n      var _this$props2 = _this.props,\n          progress = _this$props2.progress,\n          total = _this$props2.total,\n          value = _this$props2.value;\n      if (progress === 'value') return value;\n      if (progress === 'ratio') return \"\".concat(value, \"/\").concat(total);\n      return \"\".concat(percent, \"%\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPercent\", function () {\n      var _this$props3 = _this.props,\n          precision = _this$props3.precision,\n          progress = _this$props3.progress,\n          total = _this$props3.total,\n          value = _this$props3.value;\n\n      var percent = _clamp(_this.calculatePercent(), 0, 100);\n\n      if (!_isUndefined(total) && !_isUndefined(value) && progress === 'value') {\n        return value / total * 100;\n      }\n\n      if (progress === 'value') return value;\n      if (_isUndefined(precision)) return percent;\n      return _round(percent, precision);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isAutoSuccess\", function () {\n      var _this$props4 = _this.props,\n          autoSuccess = _this$props4.autoSuccess,\n          percent = _this$props4.percent,\n          total = _this$props4.total,\n          value = _this$props4.value;\n      return autoSuccess && (percent >= 100 || value >= total);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLabel\", function () {\n      var _this$props5 = _this.props,\n          children = _this$props5.children,\n          content = _this$props5.content,\n          label = _this$props5.label;\n      if (!childrenUtils.isNil(children)) return React.createElement(\"div\", {\n        className: \"label\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return React.createElement(\"div\", {\n        className: \"label\"\n      }, content);\n      return createHTMLDivision(label, {\n        autoGenerateKey: false,\n        defaultProps: {\n          className: 'label'\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProgress\", function (percent) {\n      var _this$props6 = _this.props,\n          precision = _this$props6.precision,\n          progress = _this$props6.progress;\n      if (!progress && _isUndefined(precision)) return;\n      return React.createElement(\"div\", {\n        className: \"progress\"\n      }, _this.computeValueText(percent));\n    });\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          active = _this$props7.active,\n          attached = _this$props7.attached,\n          className = _this$props7.className,\n          color = _this$props7.color,\n          disabled = _this$props7.disabled,\n          error = _this$props7.error,\n          indicating = _this$props7.indicating,\n          inverted = _this$props7.inverted,\n          size = _this$props7.size,\n          success = _this$props7.success,\n          warning = _this$props7.warning;\n      var classes = cx('ui', color, size, useKeyOnly(active || indicating, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(indicating, 'indicating'), useKeyOnly(inverted, 'inverted'), useKeyOnly(success || this.isAutoSuccess(), 'success'), useKeyOnly(warning, 'warning'), useValueAndKey(attached, 'attached'), 'progress', className);\n      var rest = getUnhandledProps(Progress, this.props);\n      var ElementType = getElementType(Progress, this.props);\n      var percent = this.getPercent() || 0;\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"data-percent\": Math.floor(percent)\n      }), React.createElement(\"div\", {\n        className: \"bar\",\n        style: {\n          width: \"\".concat(percent, \"%\")\n        }\n      }, this.renderProgress(percent)), this.renderLabel());\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\n_defineProperty(Progress, \"handledProps\", [\"active\", \"as\", \"attached\", \"autoSuccess\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"error\", \"indicating\", \"inverted\", \"label\", \"percent\", \"precision\", \"progress\", \"size\", \"success\", \"total\", \"value\", \"warning\"]);\n\nProgress.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A progress bar can show activity. */\n  active: PropTypes.bool,\n\n  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n  attached: PropTypes.oneOf(['top', 'bottom']),\n\n  /** Whether success state should automatically trigger when progress completes. */\n  autoSuccess: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A progress bar can have different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A progress bar be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A progress bar can show a error state. */\n  error: PropTypes.bool,\n\n  /** An indicating progress bar visually indicates the current level of progress of a task. */\n  indicating: PropTypes.bool,\n\n  /** A progress bar can have its colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Can be set to either to display progress as percent or ratio. */\n  label: customPropTypes.itemShorthand,\n\n  /** Current percent complete. */\n  percent: customPropTypes.every([customPropTypes.disallow(['total', 'value']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** Decimal point precision for calculated progress. */\n  precision: PropTypes.number,\n\n  /** A progress bar can contain a text value indicating current progress. */\n  progress: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['percent', 'ratio', 'value'])]),\n\n  /** A progress bar can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'huge', 'massive')),\n\n  /** A progress bar can show a success state. */\n  success: PropTypes.bool,\n\n  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */\n  total: customPropTypes.every([customPropTypes.demand(['value']), customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */\n  value: customPropTypes.every([customPropTypes.disallow(['percent']), PropTypes.oneOfType([PropTypes.number, PropTypes.string])]),\n\n  /** A progress bar can show a warning state. */\n  warning: PropTypes.bool\n} : {};\nexport default Progress;"]},"metadata":{},"sourceType":"module"}