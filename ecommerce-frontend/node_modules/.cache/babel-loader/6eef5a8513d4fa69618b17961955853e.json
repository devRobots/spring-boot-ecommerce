{"ast":null,"code":"var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n/** Used to compose bitmasks for function metadata. */\n\n\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\n\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n\n    length -= holdersCount;\n\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);\n    }\n\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n    length = args.length;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n\n    return fn.apply(thisBinding, args);\n  }\n\n  return wrapper;\n}\n\nmodule.exports = createHybrid;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/lodash/_createHybrid.js"],"names":["composeArgs","require","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurried","isFlip","Ctor","undefined","wrapper","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","thisBinding","fn","reverse","apply","module","exports"],"mappings":"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","sourcesContent":["var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n"]},"metadata":{},"sourceType":"script"}