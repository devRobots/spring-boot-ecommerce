{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useVerticalAlignProp","ItemHeader","ItemDescription","ItemExtra","ItemMeta","ItemContent","props","children","className","content","description","extra","header","meta","verticalAlign","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand","oneOf","VERTICAL_ALIGNMENTS"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;"]},"metadata":{},"sourceType":"module"}