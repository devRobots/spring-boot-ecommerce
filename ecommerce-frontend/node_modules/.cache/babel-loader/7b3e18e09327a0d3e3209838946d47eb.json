{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createFirstPage, createLastItem, createNextItem, createPageFactory, createPrevItem } from './itemFactories';\nimport { createComplexRange, createSimpleRange } from './rangeFactories';\nimport { isSimplePagination, typifyOptions } from './paginationUtils';\n/**\n * @param {object} rawOptions\n * @param {number|string} rawOptions.activePage\n * @param {number|string} rawOptions.boundaryRange Number of always visible pages at the beginning and end.\n * @param {boolean} rawOptions.hideEllipsis Marks if ellipsis should be hidden.\n * @param {number|string} rawOptions.siblingRange Number of always visible pages before and after the current one.\n * @param {number|string} rawOptions.totalPages Total number of pages.\n */\n\nvar createPaginationItems = function createPaginationItems(rawOptions) {\n  var options = typifyOptions(rawOptions);\n  var activePage = options.activePage,\n      totalPages = options.totalPages;\n  var pageFactory = createPageFactory(activePage);\n  var innerRange = isSimplePagination(options) ? createSimpleRange(1, totalPages, pageFactory) : createComplexRange(options, pageFactory);\n  return [createFirstPage(), createPrevItem(activePage)].concat(_toConsumableArray(innerRange), [createNextItem(activePage, totalPages), createLastItem(totalPages)]);\n};\n\nexport default createPaginationItems;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/createPaginationItems.js"],"names":["_toConsumableArray","createFirstPage","createLastItem","createNextItem","createPageFactory","createPrevItem","createComplexRange","createSimpleRange","isSimplePagination","typifyOptions","createPaginationItems","rawOptions","options","activePage","totalPages","pageFactory","innerRange","concat"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,0CAA/B;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,cAA1C,EAA0DC,iBAA1D,EAA6EC,cAA7E,QAAmG,iBAAnG;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,kBAAtD;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,mBAAlD;AACA;;;;;;;;;AASA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,UAA/B,EAA2C;AACrE,MAAIC,OAAO,GAAGH,aAAa,CAACE,UAAD,CAA3B;AACA,MAAIE,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,MACIC,UAAU,GAAGF,OAAO,CAACE,UADzB;AAEA,MAAIC,WAAW,GAAGX,iBAAiB,CAACS,UAAD,CAAnC;AACA,MAAIG,UAAU,GAAGR,kBAAkB,CAACI,OAAD,CAAlB,GAA8BL,iBAAiB,CAAC,CAAD,EAAIO,UAAJ,EAAgBC,WAAhB,CAA/C,GAA8ET,kBAAkB,CAACM,OAAD,EAAUG,WAAV,CAAjH;AACA,SAAO,CAACd,eAAe,EAAhB,EAAoBI,cAAc,CAACQ,UAAD,CAAlC,EAAgDI,MAAhD,CAAuDjB,kBAAkB,CAACgB,UAAD,CAAzE,EAAuF,CAACb,cAAc,CAACU,UAAD,EAAaC,UAAb,CAAf,EAAyCZ,cAAc,CAACY,UAAD,CAAvD,CAAvF,CAAP;AACD,CAPD;;AASA,eAAeJ,qBAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createFirstPage, createLastItem, createNextItem, createPageFactory, createPrevItem } from './itemFactories';\nimport { createComplexRange, createSimpleRange } from './rangeFactories';\nimport { isSimplePagination, typifyOptions } from './paginationUtils';\n/**\n * @param {object} rawOptions\n * @param {number|string} rawOptions.activePage\n * @param {number|string} rawOptions.boundaryRange Number of always visible pages at the beginning and end.\n * @param {boolean} rawOptions.hideEllipsis Marks if ellipsis should be hidden.\n * @param {number|string} rawOptions.siblingRange Number of always visible pages before and after the current one.\n * @param {number|string} rawOptions.totalPages Total number of pages.\n */\n\nvar createPaginationItems = function createPaginationItems(rawOptions) {\n  var options = typifyOptions(rawOptions);\n  var activePage = options.activePage,\n      totalPages = options.totalPages;\n  var pageFactory = createPageFactory(activePage);\n  var innerRange = isSimplePagination(options) ? createSimpleRange(1, totalPages, pageFactory) : createComplexRange(options, pageFactory);\n  return [createFirstPage(), createPrevItem(activePage)].concat(_toConsumableArray(innerRange), [createNextItem(activePage, totalPages), createLastItem(totalPages)]);\n};\n\nexport default createPaginationItems;"]},"metadata":{},"sourceType":"module"}