{"ast":null,"code":"import _includes from \"lodash/includes\";\nimport _forEach from \"lodash/forEach\";\nexport var htmlInputAttrs = [// REACT\n'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS\n'accept', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'lang', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'title', 'type', 'value'];\nexport var htmlInputEvents = [// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp', // focus\n'onFocus', 'onBlur', // form\n'onChange', 'onInput', // mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection\n'onSelect', // touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\nexport var htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\nexport var htmlImageProps = ['alt', 'height', 'src', 'srcSet', 'width'];\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {Object} [options={}]\n * @param {Array} [options.htmlProps] An array of html input props\n * @param {boolean} [options.includeAria] Includes all input props that starts with \"aria-\"\n * @returns {[{}, {}]} An array of objects\n */\n\nexport var partitionHTMLProps = function partitionHTMLProps(props) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$htmlProps = options.htmlProps,\n      htmlProps = _options$htmlProps === void 0 ? htmlInputProps : _options$htmlProps,\n      _options$includeAria = options.includeAria,\n      includeAria = _options$includeAria === void 0 ? true : _options$includeAria;\n  var inputProps = {};\n  var rest = {};\n\n  _forEach(props, function (val, prop) {\n    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');\n    var target = _includes(htmlProps, prop) || possibleAria ? inputProps : rest;\n    target[prop] = val;\n  });\n\n  return [inputProps, rest];\n};","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/lib/htmlPropsUtils.js"],"names":["_includes","_forEach","htmlInputAttrs","htmlInputEvents","htmlInputProps","concat","htmlImageProps","partitionHTMLProps","props","options","arguments","length","undefined","_options$htmlProps","htmlProps","_options$includeAria","includeAria","inputProps","rest","val","prop","possibleAria","test","target"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,IAAIC,cAAc,GAAG,CAAC;AAC7B,UAD4B,EAChB,cADgB,EACA,gBADA,EACkB;AAC9C,QAF4B,EAElB,gBAFkB,EAEA,cAFA,EAEgB,aAFhB,EAE+B,WAF/B,EAE4C,SAF5C,EAEuD,UAFvD,EAEmE,MAFnE,EAE2E,IAF3E,EAEiF,MAFjF,EAEyF,MAFzF,EAEiG,KAFjG,EAEwG,WAFxG,EAEqH,KAFrH,EAE4H,WAF5H,EAEyI,UAFzI,EAEqJ,MAFrJ,EAE6J,SAF7J,EAEwK,aAFxK,EAEuL,UAFvL,EAEmM,UAFnM,EAE+M,MAF/M,EAEuN,OAFvN,EAEgO,MAFhO,EAEwO,OAFxO,CAArB;AAGP,OAAO,IAAIC,eAAe,GAAG,CAAC;AAC9B;AACA,WAF6B,EAEhB,YAFgB,EAEF,SAFE,EAES;AACtC,SAH6B,EAGlB,QAHkB,EAGR;AACrB,UAJ6B,EAIjB,SAJiB,EAIN;AACvB,SAL6B,EAKlB,eALkB,EAKD,QALC,EAKS,WALT,EAKsB,aALtB,EAKqC,YALrC,EAKmD,aALnD,EAKkE,YALlE,EAKgF,aALhF,EAK+F,QAL/F,EAKyG,aALzG,EAKwH,cALxH,EAKwI,cALxI,EAKwJ,aALxJ,EAKuK,YALvK,EAKqL,aALrL,EAKoM,WALpM,EAKiN;AAC9O,UAN6B,EAMjB;AACZ,eAP6B,EAOZ,YAPY,EAOE,aAPF,EAOiB,cAPjB,CAAtB;AAQP,OAAO,IAAIC,cAAc,GAAG,GAAGC,MAAH,CAAUH,cAAV,EAA0BC,eAA1B,CAArB;AACP,OAAO,IAAIG,cAAc,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,OAAnC,CAArB;AACP;;;;;;;;;AASA,OAAO,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACjE,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,kBAAkB,GAAGJ,OAAO,CAACK,SAAjC;AAAA,MACIA,SAAS,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgCT,cAAhC,GAAiDS,kBADjE;AAAA,MAEIE,oBAAoB,GAAGN,OAAO,CAACO,WAFnC;AAAA,MAGIA,WAAW,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,IAAlC,GAAyCA,oBAH3D;AAIA,MAAIE,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEAjB,EAAAA,QAAQ,CAACO,KAAD,EAAQ,UAAUW,GAAV,EAAeC,IAAf,EAAqB;AACnC,QAAIC,YAAY,GAAGL,WAAW,KAAK,YAAYM,IAAZ,CAAiBF,IAAjB,KAA0BA,IAAI,KAAK,MAAxC,CAA9B;AACA,QAAIG,MAAM,GAAGvB,SAAS,CAACc,SAAD,EAAYM,IAAZ,CAAT,IAA8BC,YAA9B,GAA6CJ,UAA7C,GAA0DC,IAAvE;AACAK,IAAAA,MAAM,CAACH,IAAD,CAAN,GAAeD,GAAf;AACD,GAJO,CAAR;;AAMA,SAAO,CAACF,UAAD,EAAaC,IAAb,CAAP;AACD,CAhBM","sourcesContent":["import _includes from \"lodash/includes\";\nimport _forEach from \"lodash/forEach\";\nexport var htmlInputAttrs = [// REACT\n'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS\n'accept', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'lang', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'title', 'type', 'value'];\nexport var htmlInputEvents = [// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp', // focus\n'onFocus', 'onBlur', // form\n'onChange', 'onInput', // mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection\n'onSelect', // touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\nexport var htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\nexport var htmlImageProps = ['alt', 'height', 'src', 'srcSet', 'width'];\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {Object} [options={}]\n * @param {Array} [options.htmlProps] An array of html input props\n * @param {boolean} [options.includeAria] Includes all input props that starts with \"aria-\"\n * @returns {[{}, {}]} An array of objects\n */\n\nexport var partitionHTMLProps = function partitionHTMLProps(props) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$htmlProps = options.htmlProps,\n      htmlProps = _options$htmlProps === void 0 ? htmlInputProps : _options$htmlProps,\n      _options$includeAria = options.includeAria,\n      includeAria = _options$includeAria === void 0 ? true : _options$includeAria;\n  var inputProps = {};\n  var rest = {};\n\n  _forEach(props, function (val, prop) {\n    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');\n    var target = _includes(htmlProps, prop) || possibleAria ? inputProps : rest;\n    target[prop] = val;\n  });\n\n  return [inputProps, rest];\n};"]},"metadata":{},"sourceType":"module"}