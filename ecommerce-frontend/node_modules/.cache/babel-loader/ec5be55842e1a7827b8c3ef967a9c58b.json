{"ast":null,"code":"/**\n * Returns a createElement() type based on the props of the Component.\n * Useful for calculating what type a component should render as.\n *\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @param {function} [getDefault] A function that returns a default element type.\n * @returns {string|function} A ReactElement type\n */\nfunction getElementType(Component, props, getDefault) {\n  var _Component$defaultPro = Component.defaultProps,\n      defaultProps = _Component$defaultPro === void 0 ? {} : _Component$defaultPro; // ----------------------------------------\n  // user defined \"as\" element type\n\n  if (props.as && props.as !== defaultProps.as) return props.as; // ----------------------------------------\n  // computed default element type\n\n  if (getDefault) {\n    var computedDefault = getDefault();\n    if (computedDefault) return computedDefault;\n  } // ----------------------------------------\n  // infer anchor links\n\n\n  if (props.href) return 'a'; // ----------------------------------------\n  // use defaultProp or 'div'\n\n  return defaultProps.as || 'div';\n}\n\nexport default getElementType;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/lib/getElementType.js"],"names":["getElementType","Component","props","getDefault","_Component$defaultPro","defaultProps","as","computedDefault","href"],"mappings":"AAAA;;;;;;;;;AASA,SAASA,cAAT,CAAwBC,SAAxB,EAAmCC,KAAnC,EAA0CC,UAA1C,EAAsD;AACpD,MAAIC,qBAAqB,GAAGH,SAAS,CAACI,YAAtC;AAAA,MACIA,YAAY,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAD3D,CADoD,CAE8B;AAClF;;AAEA,MAAIF,KAAK,CAACI,EAAN,IAAYJ,KAAK,CAACI,EAAN,KAAaD,YAAY,CAACC,EAA1C,EAA8C,OAAOJ,KAAK,CAACI,EAAb,CALM,CAKW;AAC/D;;AAEA,MAAIH,UAAJ,EAAgB;AACd,QAAII,eAAe,GAAGJ,UAAU,EAAhC;AACA,QAAII,eAAJ,EAAqB,OAAOA,eAAP;AACtB,GAXmD,CAWlD;AACF;;;AAGA,MAAIL,KAAK,CAACM,IAAV,EAAgB,OAAO,GAAP,CAfoC,CAexB;AAC5B;;AAEA,SAAOH,YAAY,CAACC,EAAb,IAAmB,KAA1B;AACD;;AAED,eAAeN,cAAf","sourcesContent":["/**\n * Returns a createElement() type based on the props of the Component.\n * Useful for calculating what type a component should render as.\n *\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @param {function} [getDefault] A function that returns a default element type.\n * @returns {string|function} A ReactElement type\n */\nfunction getElementType(Component, props, getDefault) {\n  var _Component$defaultPro = Component.defaultProps,\n      defaultProps = _Component$defaultPro === void 0 ? {} : _Component$defaultPro; // ----------------------------------------\n  // user defined \"as\" element type\n\n  if (props.as && props.as !== defaultProps.as) return props.as; // ----------------------------------------\n  // computed default element type\n\n  if (getDefault) {\n    var computedDefault = getDefault();\n    if (computedDefault) return computedDefault;\n  } // ----------------------------------------\n  // infer anchor links\n\n\n  if (props.href) return 'a'; // ----------------------------------------\n  // use defaultProp or 'div'\n\n  return defaultProps.as || 'div';\n}\n\nexport default getElementType;"]},"metadata":{},"sourceType":"module"}