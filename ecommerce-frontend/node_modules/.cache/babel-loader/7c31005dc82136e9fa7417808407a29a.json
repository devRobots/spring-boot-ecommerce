{"ast":null,"code":"import _slicedToArray from \"/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/src/pages/Categories.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, Segment, Card } from \"semantic-ui-react\";\nimport Category from \"../components/Category\";\nimport Pagination from \"../components/Pagination\";\nimport AddCategoryForm from \"../components/AddCategoryForm\";\nimport Context from \"../config/context\";\nexport default function Categories() {\n  const context = useContext(Context);\n  const user = context.user,\n        categories = context.categories,\n        getCategories = context.getCategories;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const _useState3 = useState(9),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardsPerPage = _useState4[0],\n        setCardsPerPage = _useState4[1];\n\n  useEffect(() => {\n    getCategories();\n  }, []); // Get current categories\n\n  const indexOfLastCategory = currentPage * cardsPerPage;\n  const indexOfFirstCategory = indexOfLastCategory - cardsPerPage;\n  const currentCategories = categories.slice(indexOfFirstCategory, indexOfLastCategory);\n  const views = categories.length > 0 ? currentCategories.map(category => React.createElement(Category, {\n    category: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Nothing here!\")));\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination = categories.length > cardsPerPage ? React.createElement(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: categories.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : null;\n  const add = user ? user.admin ? React.createElement(AddCategoryForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : null : null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    floated: \"left\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Recent Categories\")), React.createElement(Grid.Column, {\n    floated: \"right\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, add))), React.createElement(Card.Group, {\n    fluid: true,\n    itemsPerRow: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, views), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, pagination));\n}","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/src/pages/Categories.js"],"names":["React","useContext","useState","useEffect","Grid","Segment","Card","Category","Pagination","AddCategoryForm","Context","Categories","context","user","categories","getCategories","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastCategory","indexOfFirstCategory","currentCategories","slice","views","length","map","category","paginate","pageNumber","pagination","add","admin"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { Grid, Segment, Card } from \"semantic-ui-react\";\n\nimport Category from \"../components/Category\";\nimport Pagination from \"../components/Pagination\";\nimport AddCategoryForm from \"../components/AddCategoryForm\";\n\nimport Context from \"../config/context\";\n\nexport default function Categories() {\n  const context = useContext(Context);\n  const { user, categories, getCategories } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(9);\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  // Get current categories\n  const indexOfLastCategory = currentPage * cardsPerPage;\n  const indexOfFirstCategory = indexOfLastCategory - cardsPerPage;\n  const currentCategories = categories.slice(\n    indexOfFirstCategory,\n    indexOfLastCategory\n  );\n\n  const views =\n    categories.length > 0 ? (\n      currentCategories.map(category => <Category category={category} />)\n    ) : (\n      <Card>\n        <Card.Content>\n          <h2>Nothing here!</h2>\n        </Card.Content>\n      </Card>\n    );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination =\n    categories.length > cardsPerPage ? (\n      <Pagination\n        cardsPerPage={cardsPerPage}\n        totalCards={categories.length}\n        paginate={paginate}\n      />\n    ) : null;\n\n  const add = user ? user.admin ? <AddCategoryForm /> : null : null;\n\n  return (\n    <div>\n      <Segment>\n        <Grid>\n          <Grid.Column floated=\"left\" width={5}>\n            <h1>Recent Categories</h1>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5}>\n            {add}\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Card.Group fluid itemsPerRow=\"3\">\n        {views}\n      </Card.Group>\n      <br />\n      <center>{pagination}</center>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}