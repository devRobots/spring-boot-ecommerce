{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\n\n\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = ['baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'];\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys);\n  var otherKeys = Object.keys(config2).filter(function filterAxiosKeys(key) {\n    return axiosKeys.indexOf(key) === -1;\n  });\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  return config;\n};","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/axios/lib/core/mergeConfig.js"],"names":["utils","require","module","exports","mergeConfig","config1","config2","config","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","forEach","valueFromConfig2","prop","mergeDeepProperties","isObject","deepMerge","defaultToConfig2","axiosKeys","concat","otherKeys","Object","keys","filter","filterAxiosKeys","key","indexOf","otherKeysDefaultToConfig2"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n"]},"metadata":{},"sourceType":"script"}