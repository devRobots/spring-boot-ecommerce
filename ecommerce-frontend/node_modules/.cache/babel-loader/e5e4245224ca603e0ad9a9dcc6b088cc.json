{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n      length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderLine.js"],"names":["_extends","cx","PropTypes","React","getElementType","getUnhandledProps","PlaceholderLine","props","className","length","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,WAAlD;AACA;;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,MAAM,GAAGF,KAAK,CAACE,MADnB;AAEA,MAAIC,OAAO,GAAGT,EAAE,CAAC,MAAD,EAASQ,MAAT,EAAiBD,SAAjB,CAAhB;AACA,MAAIG,IAAI,GAAGN,iBAAiB,CAACC,eAAD,EAAkBC,KAAlB,CAA5B;AACA,MAAIK,WAAW,GAAGR,cAAc,CAACE,eAAD,EAAkBC,KAAlB,CAAhC;AACA,SAAOJ,KAAK,CAACU,aAAN,CAAoBD,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;AACzDH,IAAAA,SAAS,EAAEE;AAD8C,GAAX,CAAzC,CAAP;AAGD;;AAEDJ,eAAe,CAACQ,YAAhB,GAA+B,CAAC,IAAD,EAAO,WAAP,EAAoB,QAApB,CAA/B;AACAR,eAAe,CAACS,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAC,EAAAA,EAAE,EAAEjB,SAAS,CAACkB,WAFoD;;AAIlE;AACAZ,EAAAA,SAAS,EAAEN,SAAS,CAACmB,MAL6C;;AAOlE;AACAZ,EAAAA,MAAM,EAAEP,SAAS,CAACoB,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD,YAAjD,CAAhB;AAR0D,CAAxC,GASxB,EATJ;AAUA,eAAehB,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n      length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;"]},"metadata":{},"sourceType":"module"}