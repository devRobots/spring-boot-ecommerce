{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\n\nfunction FormCheckbox(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormCheckbox, props);\n  var ElementType = getElementType(FormCheckbox, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormCheckbox.handledProps = [\"as\", \"control\"];\nFormCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormCheckbox.defaultProps = {\n  as: FormField,\n  control: Checkbox\n};\nexport default FormCheckbox;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/collections/Form/FormCheckbox.js"],"names":["_extends","PropTypes","React","getElementType","getUnhandledProps","Checkbox","FormField","FormCheckbox","props","control","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,WAAlD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA;;;;;;AAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,MAAIC,IAAI,GAAGN,iBAAiB,CAACG,YAAD,EAAeC,KAAf,CAA5B;AACA,MAAIG,WAAW,GAAGR,cAAc,CAACI,YAAD,EAAeC,KAAf,CAAhC;AACA,SAAON,KAAK,CAACU,aAAN,CAAoBD,WAApB,EAAiCX,QAAQ,CAAC,EAAD,EAAKU,IAAL,EAAW;AACzDD,IAAAA,OAAO,EAAEA;AADgD,GAAX,CAAzC,CAAP;AAGD;;AAEDF,YAAY,CAACM,YAAb,GAA4B,CAAC,IAAD,EAAO,SAAP,CAA5B;AACAN,YAAY,CAACO,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/D;AACAC,EAAAA,EAAE,EAAEjB,SAAS,CAACkB,WAFiD;;AAI/D;AACAV,EAAAA,OAAO,EAAEH,SAAS,CAACQ,SAAV,CAAoBL;AALkC,CAAxC,GAMrB,EANJ;AAOAF,YAAY,CAACa,YAAb,GAA4B;AAC1BF,EAAAA,EAAE,EAAEZ,SADsB;AAE1BG,EAAAA,OAAO,EAAEJ;AAFiB,CAA5B;AAIA,eAAeE,YAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\n\nfunction FormCheckbox(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormCheckbox, props);\n  var ElementType = getElementType(FormCheckbox, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\n\nFormCheckbox.handledProps = [\"as\", \"control\"];\nFormCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormCheckbox.defaultProps = {\n  as: FormField,\n  control: Checkbox\n};\nexport default FormCheckbox;"]},"metadata":{},"sourceType":"module"}