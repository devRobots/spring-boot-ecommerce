{"ast":null,"code":"var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\n\n\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/lodash/startsWith.js"],"names":["baseClamp","require","baseToString","toInteger","toString","startsWith","string","target","position","length","slice","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAD1B;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,aAAD,CAFvB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAHtB;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAC5CF,EAAAA,MAAM,GAAGF,QAAQ,CAACE,MAAD,CAAjB;AACAE,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GACP,CADO,GAEPR,SAAS,CAACG,SAAS,CAACK,QAAD,CAAV,EAAsB,CAAtB,EAAyBF,MAAM,CAACG,MAAhC,CAFb;AAIAF,EAAAA,MAAM,GAAGL,YAAY,CAACK,MAAD,CAArB;AACA,SAAOD,MAAM,CAACI,KAAP,CAAaF,QAAb,EAAuBA,QAAQ,GAAGD,MAAM,CAACE,MAAzC,KAAoDF,MAA3D;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,UAAjB","sourcesContent":["var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n"]},"metadata":{},"sourceType":"script"}