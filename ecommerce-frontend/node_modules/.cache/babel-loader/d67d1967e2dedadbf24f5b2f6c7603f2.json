{"ast":null,"code":"var toString = require('./toString');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\n\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n}\n\nmodule.exports = escapeRegExp;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/lodash/escapeRegExp.js"],"names":["toString","require","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","string","test","replace","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;AAIA,IAAIC,YAAY,GAAG,qBAAnB;AAAA,IACIC,eAAe,GAAGC,MAAM,CAACF,YAAY,CAACG,MAAd,CAD5B;AAGA;;;;;;;;;;;;;;;;AAeA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BA,EAAAA,MAAM,GAAGP,QAAQ,CAACO,MAAD,CAAjB;AACA,SAAQA,MAAM,IAAIJ,eAAe,CAACK,IAAhB,CAAqBD,MAArB,CAAX,GACHA,MAAM,CAACE,OAAP,CAAeP,YAAf,EAA6B,MAA7B,CADG,GAEHK,MAFJ;AAGD;;AAEDG,MAAM,CAACC,OAAP,GAAiBL,YAAjB","sourcesContent":["var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"]},"metadata":{},"sourceType":"script"}