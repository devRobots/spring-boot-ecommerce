{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A dropdown menu can contain a header.\n */\n\nfunction DropdownHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(DropdownHeader, props);\n  var ElementType = getElementType(DropdownHeader, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon, {\n    autoGenerateKey: false\n  }), content);\n}\n\nDropdownHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function) */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand\n} : {};\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default DropdownHeader;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownHeader.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","Icon","DropdownHeader","props","children","className","content","icon","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,QAA0G,WAA1G;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA;;;;AAIA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAIA,MAAIC,OAAO,GAAGf,EAAE,CAAC,QAAD,EAAWY,SAAX,CAAhB;AACA,MAAII,IAAI,GAAGT,iBAAiB,CAACE,cAAD,EAAiBC,KAAjB,CAA5B;AACA,MAAIO,WAAW,GAAGX,cAAc,CAACG,cAAD,EAAiBC,KAAjB,CAAhC;;AAEA,MAAI,CAACP,aAAa,CAACe,KAAd,CAAoBP,QAApB,CAAL,EAAoC;AAClC,WAAOT,KAAK,CAACiB,aAAN,CAAoBF,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AACzDJ,MAAAA,SAAS,EAAEG;AAD8C,KAAX,CAAzC,EAEHJ,QAFG,CAAP;AAGD;;AAED,SAAOT,KAAK,CAACiB,aAAN,CAAoBF,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AACzDJ,IAAAA,SAAS,EAAEG;AAD8C,GAAX,CAAzC,EAEHP,IAAI,CAACY,MAAL,CAAYN,IAAZ,EAAkB;AACpBO,IAAAA,eAAe,EAAE;AADG,GAAlB,CAFG,EAIHR,OAJG,CAAP;AAKD;;AAEDJ,cAAc,CAACa,YAAf,GAA8B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,CAA9B;AACAb,cAAc,CAACc,SAAf,GAA2BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjE;AACAC,EAAAA,EAAE,EAAE1B,SAAS,CAAC2B,WAFmD;;AAIjE;AACAjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,IAL6C;;AAOjE;AACAjB,EAAAA,SAAS,EAAEX,SAAS,CAAC6B,MAR4C;;AAUjE;AACAjB,EAAAA,OAAO,EAAER,eAAe,CAAC0B,gBAXwC;;AAajE;AACAjB,EAAAA,IAAI,EAAET,eAAe,CAAC2B;AAd2C,CAAxC,GAevB,EAfJ;AAgBAvB,cAAc,CAACW,MAAf,GAAwBhB,sBAAsB,CAACK,cAAD,EAAiB,UAAUI,OAAV,EAAmB;AAChF,SAAO;AACLA,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CAJ6C,CAA9C;AAKA,eAAeJ,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A dropdown menu can contain a header.\n */\n\nfunction DropdownHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(DropdownHeader, props);\n  var ElementType = getElementType(DropdownHeader, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon, {\n    autoGenerateKey: false\n  }), content);\n}\n\nDropdownHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function) */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand\n} : {};\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default DropdownHeader;"]},"metadata":{},"sourceType":"module"}