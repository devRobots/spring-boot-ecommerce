{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/**\n * The function that correctly handles passing refs.\n *\n * @param ref An ref object or function\n * @param node A node that should be passed by ref\n */\n\nvar handleRef = function handleRef(ref, node) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error('We do not support refs as string, this is a legacy API and will be likely to be removed in one of the future releases of React.');\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && _typeof(ref) === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because\n    // `ref` is a mutable object\n    ;\n    ref.current = node;\n  }\n};\n\nexport default handleRef;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/@stardust-ui/react-component-ref/dist/es/handleRef.js"],"names":["_typeof","handleRef","ref","node","process","env","NODE_ENV","Error","current"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AAEA;;;;;;;AAMA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5C,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,OAAOJ,GAAP,KAAe,QAAnB,EAA6B;AAC3B,YAAM,IAAIK,KAAJ,CAAU,iIAAV,CAAN;AACD;AACF;;AAED,MAAI,OAAOL,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,IAAAA,GAAG,CAACC,IAAD,CAAH;AACA;AACD;;AAED,MAAID,GAAG,KAAK,IAAR,IAAgBF,OAAO,CAACE,GAAD,CAAP,KAAiB,QAArC,EAA+C;AAC7C;AACA;AACA;AACAA,IAAAA,GAAG,CAACM,OAAJ,GAAcL,IAAd;AACD;AACF,CAlBD;;AAoBA,eAAeF,SAAf","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/**\n * The function that correctly handles passing refs.\n *\n * @param ref An ref object or function\n * @param node A node that should be passed by ref\n */\nvar handleRef = function handleRef(ref, node) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error('We do not support refs as string, this is a legacy API and will be likely to be removed in one of the future releases of React.');\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && _typeof(ref) === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because\n    // `ref` is a mutable object\n    ;\n    ref.current = node;\n  }\n};\n\nexport default handleRef;"]},"metadata":{},"sourceType":"module"}