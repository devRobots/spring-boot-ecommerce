{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js"],"names":["_extends","cx","PropTypes","React","getUnhandledProps","useValueAndKey","TableCell","TableHeaderCell","props","as","className","sorted","classes","rest","createElement","handledProps","propTypes","process","env","NODE_ENV","elementType","string","oneOf","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,WAAlD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA;;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,EAAE,GAAGD,KAAK,CAACC,EAAf;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,MAAM,GAAGH,KAAK,CAACG,MAFnB;AAGA,MAAIC,OAAO,GAAGX,EAAE,CAACI,cAAc,CAACM,MAAD,EAAS,QAAT,CAAf,EAAmCD,SAAnC,CAAhB;AACA,MAAIG,IAAI,GAAGT,iBAAiB,CAACG,eAAD,EAAkBC,KAAlB,CAA5B;AACA,SAAOL,KAAK,CAACW,aAAN,CAAoBR,SAApB,EAA+BN,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAW;AACvDJ,IAAAA,EAAE,EAAEA,EADmD;AAEvDC,IAAAA,SAAS,EAAEE;AAF4C,GAAX,CAAvC,CAAP;AAID;;AAEDL,eAAe,CAACQ,YAAhB,GAA+B,CAAC,IAAD,EAAO,WAAP,EAAoB,QAApB,CAA/B;AACAR,eAAe,CAACS,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAV,EAAAA,EAAE,EAAEP,SAAS,CAACkB,WAFoD;;AAIlE;AACAV,EAAAA,SAAS,EAAER,SAAS,CAACmB,MAL6C;;AAOlE;AACAV,EAAAA,MAAM,EAAET,SAAS,CAACoB,KAAV,CAAgB,CAAC,WAAD,EAAc,YAAd,CAAhB;AAR0D,CAAxC,GASxB,EATJ;AAUAf,eAAe,CAACgB,YAAhB,GAA+B;AAC7Bd,EAAAA,EAAE,EAAE;AADyB,CAA/B;AAGA,eAAeF,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;"]},"metadata":{},"sourceType":"module"}