{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user, {\n    autoGenerateKey: false\n  }), content && ' ', content, content && ' ', createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedSummary.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"user\"];\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","FeedDate","FeedUser","FeedSummary","props","children","className","content","date","user","classes","rest","ElementType","isNil","createElement","val","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,QAAmG,WAAnG;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;AAAA,MAIIC,IAAI,GAAGL,KAAK,CAACK,IAJjB;AAKA,MAAIC,OAAO,GAAGjB,EAAE,CAAC,SAAD,EAAYa,SAAZ,CAAhB;AACA,MAAIK,IAAI,GAAGX,iBAAiB,CAACG,WAAD,EAAcC,KAAd,CAA5B;AACA,MAAIQ,WAAW,GAAGb,cAAc,CAACI,WAAD,EAAcC,KAAd,CAAhC;;AAEA,MAAI,CAACR,aAAa,CAACiB,KAAd,CAAoBR,QAApB,CAAL,EAAoC;AAClC,WAAOV,KAAK,CAACmB,aAAN,CAAoBF,WAApB,EAAiCpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;AACzDL,MAAAA,SAAS,EAAEI;AAD8C,KAAX,CAAzC,EAEHL,QAFG,CAAP;AAGD;;AAED,SAAOV,KAAK,CAACmB,aAAN,CAAoBF,WAApB,EAAiCpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;AACzDL,IAAAA,SAAS,EAAEI;AAD8C,GAAX,CAAzC,EAEHb,eAAe,CAACK,QAAD,EAAW,UAAUa,GAAV,EAAe;AAC3C,WAAO;AACLR,MAAAA,OAAO,EAAEQ;AADJ,KAAP;AAGD,GAJkB,EAIhBN,IAJgB,EAIV;AACPO,IAAAA,eAAe,EAAE;AADV,GAJU,CAFZ,EAQHT,OAAO,IAAI,GARR,EAQaA,OARb,EAQsBA,OAAO,IAAI,GARjC,EAQsCV,eAAe,CAACI,QAAD,EAAW,UAAUc,GAAV,EAAe;AACpF,WAAO;AACLR,MAAAA,OAAO,EAAEQ;AADJ,KAAP;AAGD,GAJ2D,EAIzDP,IAJyD,EAInD;AACPQ,IAAAA,eAAe,EAAE;AADV,GAJmD,CARrD,CAAP;AAeD;;AAEDb,WAAW,CAACc,YAAZ,GAA2B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,MAAnD,CAA3B;AACAd,WAAW,CAACe,SAAZ,GAAwBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC9D;AACAC,EAAAA,EAAE,EAAE5B,SAAS,CAAC6B,WAFgD;;AAI9D;AACAlB,EAAAA,QAAQ,EAAEX,SAAS,CAAC8B,IAL0C;;AAO9D;AACAlB,EAAAA,SAAS,EAAEZ,SAAS,CAAC+B,MARyC;;AAU9D;AACAlB,EAAAA,OAAO,EAAET,eAAe,CAAC4B,gBAXqC;;AAa9D;AACAlB,EAAAA,IAAI,EAAEV,eAAe,CAAC6B,aAdwC;;AAgB9D;AACAlB,EAAAA,IAAI,EAAEX,eAAe,CAAC6B;AAjBwC,CAAxC,GAkBpB,EAlBJ;AAmBA,eAAexB,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user, {\n    autoGenerateKey: false\n  }), content && ' ', content, content && ' ', createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedSummary.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"user\"];\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;"]},"metadata":{},"sourceType":"module"}