{"ast":null,"code":"var baseForOwn = require('./_baseForOwn');\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function (value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;","map":{"version":3,"sources":["/home/willi/Documentos/spring-boot-ecommerce/ecommerce-frontend/node_modules/lodash/_baseInverter.js"],"names":["baseForOwn","require","baseInverter","object","setter","iteratee","accumulator","value","key","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAxB;AAEA;;;;;;;;;;;;;AAWA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDC,WAAhD,EAA6D;AAC3DN,EAAAA,UAAU,CAACG,MAAD,EAAS,UAASI,KAAT,EAAgBC,GAAhB,EAAqBL,MAArB,EAA6B;AAC9CC,IAAAA,MAAM,CAACE,WAAD,EAAcD,QAAQ,CAACE,KAAD,CAAtB,EAA+BC,GAA/B,EAAoCL,MAApC,CAAN;AACD,GAFS,CAAV;AAGA,SAAOG,WAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBR,YAAjB","sourcesContent":["var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n"]},"metadata":{},"sourceType":"script"}